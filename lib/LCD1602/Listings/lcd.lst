C51 COMPILER V9.54   LCD                                                                   04/01/2021 19:55:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: E:\Kiel 5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.ls
                    -t) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          #define LCD1602_DB P0
   4          sbit LCD1602_E=P2^7;
   5          sbit LCD1602_RW=P2^5;
   6          sbit LCD1602_RS=P2^6;
   7          
   8          void InitLcd1602();
   9          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
  10          
  11          //液晶初始界面――温度
  12          void LcdStar()
  13          {
  14   1        unsigned char str[] = "benny";
  15   1        unsigned char tab[]="temp: "; 
  16   1        InitLcd1602();//初始化液晶
  17   1        LcdShowStr(5, 0, str);
  18   1        LcdShowStr(1, 1, tab);
  19   1        LcdShowStr(6, 1, "00.00");//默认初始化温度为00
  20   1        LcdShowStr(12, 1, "C");//添加C温度  
  21   1      }
  22          
  23          //等待液晶准备
  24          void LcdWaitReady()
  25          {
  26   1        unsigned char sta;
  27   1        LCD1602_DB = 0xFF;
  28   1        LCD1602_RS = 0;
  29   1        LCD1602_RW = 1;
  30   1        do {
  31   2          LCD1602_E = 1;
  32   2          sta = LCD1602_DB; //读取状态字
  33   2          LCD1602_E = 0;
  34   2        } while (sta & 0x80); //bit7等于1表示液晶正忙，重复检测直到等于0为止
  35   1      }
  36          
  37          //向LCD1602液晶写入一字节命令cmd
  38          void LcdWriteCmd(unsigned char cmd)
  39          {
  40   1        LcdWaitReady();
  41   1        LCD1602_RS = 0;
  42   1        LCD1602_RW = 0;
  43   1        LCD1602_DB = cmd;
  44   1        LCD1602_E = 1;
  45   1        LCD1602_E = 0;
  46   1      }
  47          //向LCD1602液晶写入一字节数据dat
  48          void LcdWriteDat(unsigned char dat)
  49          {
  50   1        LcdWaitReady();
  51   1        LCD1602_RS = 1;
  52   1        LCD1602_RW = 0;
  53   1        LCD1602_DB = dat;
  54   1        LCD1602_E = 1;
C51 COMPILER V9.54   LCD                                                                   04/01/2021 19:55:27 PAGE 2   

  55   1        LCD1602_E = 0;
  56   1      }
  57          //设置显示RAM起始位置，即光标位置(x,y)
  58          void LcdSetCursor(unsigned char x, unsigned char y)
  59          {
  60   1        unsigned char addr;
  61   1        if (y == 0) //由输入的屏幕坐标计算RAM的地址
  62   1          addr = 0x00 + x; //第一行：0x00
  63   1        else
  64   1          addr = 0x40 + x; //第二行：0x40
  65   1        LcdWriteCmd(addr | 0x80); //设置RAM地址
  66   1      }
  67          //在液晶(x,y)坐标处显示字符串str
  68          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str)
  69          {
  70   1        LcdSetCursor(x, y); //设置起始坐标
  71   1        while (*str != '\0') //连续写入字符串数据，直到结束符
  72   1        {
  73   2          LcdWriteDat(*str++); //自加1
  74   2        }
  75   1      }
  76          //初始化1602液晶
  77          void InitLcd1602()
  78          {
  79   1        LcdWriteCmd(0x38); //16*2显示, 5*7点阵, 8位数据接口
  80   1        LcdWriteCmd(0x0C); //显示器开，光标关闭
  81   1        LcdWriteCmd(0x06); //文字不动，地址自动+1
  82   1        LcdWriteCmd(0x01); //清屏
  83   1      }
  84          
  85          //测试
  86          void main()
  87          {
  88   1        InitLcd1602(); //初始化液晶
  89   1        //LcdStar(); //显示温度界面
  90   1        LcdSetCursor(4,0);
  91   1        LcdWriteDat('0');
  92   1        LcdWriteDat('1');
  93   1        LcdWriteDat('2');
  94   1        while(1);
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    248    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
