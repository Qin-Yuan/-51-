C51 COMPILER V9.54   TEMP                                                                  03/24/2021 23:18:39 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\temp.obj
COMPILER INVOKED BY: E:\Kiel 5\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\temp.
                    -lst) TABS(2) OBJECT(.\Objects\temp.obj)

line level    source

   1          #include<reg51.h>
   2          
   3          sbit DSPORT=P1^0;
   4          /*******************************************************************************
   5          * 函数名         : Delay1ms
   6          * 函数功能       : 延时函数
   7          * 输入           : 无
   8          * 输出           : 无
   9          *******************************************************************************/
  10          
  11          void Delay1ms(unsigned int y)
  12          {
  13   1        unsigned int x;
  14   1        for(y;y>0;y--)
  15   1          for(x=110;x>0;x--);
  16   1      }
  17          /*******************************************************************************
  18          * 函数名         : Ds18b20Init
  19          * 函数功能       : 初始化
  20          * 输入           : 无
  21          * 输出           : 初始化成功返回1，失败返回0
  22          *******************************************************************************/
  23          
  24          unsigned char Ds18b20Init()
  25          {
  26   1        unsigned int i;
  27   1        DSPORT=0;      //将总线拉低480us~960us
  28   1        i=70; 
  29   1        while(i--);//延时642us
  30   1        DSPORT=1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  31   1        i=0;
  32   1        while(DSPORT) //等待DS18B20拉低总线
  33   1        {
  34   2          i++;
  35   2          if(i>5000)//等待>5MS
  36   2            return 0;//初始化失败 
  37   2        }
  38   1        return 1;//初始化成功
  39   1      }
  40          
  41          /*******************************************************************************
  42          * 函数名         : Ds18b20WriteByte
  43          * 函数功能       : 向18B20写入一个字节
  44          * 输入           : com
  45          * 输出           : 无
  46          *******************************************************************************/
  47          
  48          void Ds18b20WriteByte(unsigned char dat)
  49          {
  50   1        unsigned int i,j;
  51   1        for(j=0;j<8;j++)
  52   1        {
  53   2          DSPORT=0;     //每写入一位数据之前先把总线拉低1us
  54   2          i++;
C51 COMPILER V9.54   TEMP                                                                  03/24/2021 23:18:39 PAGE 2   

  55   2          DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
  56   2          i=6;
  57   2          while(i--); //延时68us，持续时间最少60us
  58   2          DSPORT=1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  59   2          dat>>=1;
  60   2        }
  61   1      }
  62          /*******************************************************************************
  63          * 函数名         : Ds18b20ReadByte
  64          * 函数功能       : 读取一个字节
  65          * 输入           : com
  66          * 输出           : 无
  67          *******************************************************************************/
  68          
  69          
  70          unsigned char Ds18b20ReadByte()
  71          {
  72   1        unsigned char byte,bi;
  73   1        unsigned int i,j; 
  74   1        for(j=8;j>0;j--)
  75   1        {
  76   2          DSPORT=0;//先将总线拉低1us
  77   2          i++;
  78   2          DSPORT=1;//然后释放总线
  79   2          i++;
  80   2          i++;//延时6us等待数据稳定
  81   2          bi=DSPORT;   //读取数据，从最低位开始读取
  82   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  83   2          byte=(byte>>1)|(bi<<7);             
  84   2          i=4;    //读取完之后等待48us再接着读取下一个数
  85   2          while(i--);
  86   2        }       
  87   1        return byte;
  88   1      }
  89          /*******************************************************************************
  90          * 函数名         : Ds18b20ChangTemp
  91          * 函数功能       : 让18b20开始转换温度
  92          * 输入           : com
  93          * 输出           : 无
  94          *******************************************************************************/
  95          
  96          void  Ds18b20ChangTemp()
  97          {
  98   1        Ds18b20Init();
  99   1        Delay1ms(1);
 100   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
 101   1        Ds18b20WriteByte(0x44);     //温度转换命令
 102   1      //  Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 103   1         
 104   1      }
 105          /*******************************************************************************
 106          * 函数名         : Ds18b20ReadTempCom
 107          * 函数功能       : 发送读取温度命令
 108          * 输入           : com
 109          * 输出           : 无
 110          *******************************************************************************/
 111          
 112          void  Ds18b20ReadTempCom()
 113          { 
 114   1      
 115   1        Ds18b20Init();
 116   1        Delay1ms(1);
C51 COMPILER V9.54   TEMP                                                                  03/24/2021 23:18:39 PAGE 3   

 117   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 118   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
 119   1      }
 120          /*******************************************************************************
 121          * 函数名         : Ds18b20ReadTemp
 122          * 函数功能       : 读取温度
 123          * 输入           : com
 124          * 输出           : 无
 125          *******************************************************************************/
 126          
 127          int Ds18b20ReadTemp()
 128          {
 129   1        int temp=0;
 130   1        unsigned char tmh,tml;
 131   1        Ds18b20ChangTemp();       //先写入转换命令
 132   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
 133   1        tml=Ds18b20ReadByte();    //读取温度值共16位，先读低字节
 134   1        tmh=Ds18b20ReadByte();    //再读高字节
 135   1        temp=tmh;
 136   1        temp<<=8;
 137   1        temp|=tml;
 138   1        return temp;
 139   1      }
 140          
 141          //测试
 142          void main()
 143          {
 144   1        int temp;
 145   1        temp=Ds18b20ReadTemp();
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    249    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
